{"ast":null,"code":"var _jsxFileName = \"/home/chernandez148/personal_projects/protfolio_v4/client/src/components/ParticleCanvas.js.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParticleCanvas = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const particles = [];\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    class Particle {\n      constructor(x, y) {\n        this.x = x;\n        this.y = y;\n        this.size = Math.random() * 5 + 2;\n        this.speedX = Math.random() * 3 - 1.5;\n        this.color = 'rgba(255, 255, 255, 0.8)';\n      }\n      update() {\n        this.x += this.speedX;\n        this.y -= 0.5;\n\n        // Add a condition to prevent negative size\n        if (this.size > 0) {\n          this.size -= 0.02;\n        }\n      }\n      draw() {\n        ctx.fillStyle = this.color;\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n        ctx.fill();\n      }\n    }\n    function animate() {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      const particlesToRemove = [];\n      particles.forEach((particle, index) => {\n        particle.update();\n        particle.draw();\n        if (particle.size <= 0) {\n          particlesToRemove.push(index);\n        }\n      });\n      particlesToRemove.forEach(index => {\n        particles.splice(index, 1);\n      });\n      requestAnimationFrame(animate);\n    }\n    const handleMouseMove = e => {\n      const {\n        clientX,\n        clientY\n      } = e;\n      for (let i = 0; i < 20; i++) {\n        particles.push(new Particle(clientX, clientY));\n      }\n    };\n    canvas.addEventListener('mousemove', handleMouseMove);\n    animate();\n    return () => {\n      canvas.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 12\n  }, this);\n};\n_s(ParticleCanvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = ParticleCanvas;\nexport default ParticleCanvas;\nvar _c;\n$RefreshReg$(_c, \"ParticleCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","ParticleCanvas","_s","canvasRef","particles","canvas","current","ctx","getContext","width","window","innerWidth","height","innerHeight","Particle","constructor","x","y","size","Math","random","speedX","color","update","draw","fillStyle","beginPath","arc","PI","fill","animate","clearRect","particlesToRemove","forEach","particle","index","push","splice","requestAnimationFrame","handleMouseMove","e","clientX","clientY","i","addEventListener","removeEventListener","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/chernandez148/personal_projects/protfolio_v4/client/src/components/ParticleCanvas.js.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\n\nconst ParticleCanvas = () => {\n    const canvasRef = useRef(null);\n    const particles = [];\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n\n        class Particle {\n            constructor(x, y) {\n                this.x = x;\n                this.y = y;\n                this.size = Math.random() * 5 + 2;\n                this.speedX = Math.random() * 3 - 1.5;\n                this.color = 'rgba(255, 255, 255, 0.8)';\n            }\n\n            update() {\n                this.x += this.speedX;\n                this.y -= 0.5;\n\n                // Add a condition to prevent negative size\n                if (this.size > 0) {\n                    this.size -= 0.02;\n                }\n            }\n\n            draw() {\n                ctx.fillStyle = this.color;\n                ctx.beginPath();\n                ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n                ctx.fill();\n            }\n        }\n\n        function animate() {\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n            const particlesToRemove = [];\n\n            particles.forEach((particle, index) => {\n                particle.update();\n                particle.draw();\n\n                if (particle.size <= 0) {\n                    particlesToRemove.push(index);\n                }\n            });\n\n            particlesToRemove.forEach(index => {\n                particles.splice(index, 1);\n            });\n\n            requestAnimationFrame(animate);\n        }\n\n        const handleMouseMove = (e) => {\n            const { clientX, clientY } = e;\n            for (let i = 0; i < 20; i++) {\n                particles.push(new Particle(clientX, clientY));\n            }\n        };\n\n        canvas.addEventListener('mousemove', handleMouseMove);\n        animate();\n\n        return () => {\n            canvas.removeEventListener('mousemove', handleMouseMove);\n        };\n    }, []);\n\n    return <canvas ref={canvasRef} />;\n};\n\nexport default ParticleCanvas;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}