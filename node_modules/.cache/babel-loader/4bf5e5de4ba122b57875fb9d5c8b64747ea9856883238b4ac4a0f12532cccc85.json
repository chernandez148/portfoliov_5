{"ast":null,"code":"var _jsxFileName = \"/home/chernandez148/personal_projects/protfolio_v4/client/src/components/ParticleCanvas.js.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParticleCanvas = () => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    const particles = [];\n    let frameCount = 0; // Initialize frameCount\n\n    class Particle {\n      constructor(x, y) {\n        this.x = x;\n        this.y = y;\n        this.size = Math.random() * 5 + 2;\n        this.speedX = Math.random() * 3 - 1.5;\n        this.opacity = 1; // Initial opacity between 0.5 and 1\n\n        this.update = () => {\n          this.x += this.speedX;\n          this.y -= 0.5;\n          this.opacity -= 0.01; // Decrease opacity over time\n        };\n\n        this.draw = () => {\n          console.log('Drawing particle', this.x, this.y, this.size, this.opacity);\n          ctx.fillStyle = `rgba(255, 255, 255, ${this.opacity})`;\n          ctx.beginPath();\n          ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n          ctx.fill();\n        };\n      }\n    }\n    function animate() {\n      frameCount++; // Increment frameCount\n\n      if (frameCount % 10 === 0) {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n      }\n      particles.forEach((particle, index) => {\n        particle.update();\n        particle.draw();\n        if (particle.opacity <= 0) {\n          particles.splice(index, 1);\n        }\n      });\n      requestAnimationFrame(animate);\n    }\n    const handleMouseMove = e => {\n      const {\n        clientX,\n        clientY\n      } = e;\n      for (let i = 0; i < 20; i++) {\n        particles.push(new Particle(clientX, clientY));\n      }\n    };\n    canvas.addEventListener('mousemove', handleMouseMove);\n    animate();\n    return () => {\n      canvas.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 12\n  }, this);\n};\n_s(ParticleCanvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = ParticleCanvas;\nexport default ParticleCanvas;\nvar _c;\n$RefreshReg$(_c, \"ParticleCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","ParticleCanvas","_s","canvasRef","canvas","current","ctx","getContext","width","window","innerWidth","height","innerHeight","particles","frameCount","Particle","constructor","x","y","size","Math","random","speedX","opacity","update","draw","console","log","fillStyle","beginPath","arc","PI","fill","animate","clearRect","forEach","particle","index","splice","requestAnimationFrame","handleMouseMove","e","clientX","clientY","i","push","addEventListener","removeEventListener","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/chernandez148/personal_projects/protfolio_v4/client/src/components/ParticleCanvas.js.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\n\nconst ParticleCanvas = () => {\n    const canvasRef = useRef(null);\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n\n        const particles = [];\n        let frameCount = 0; // Initialize frameCount\n\n        class Particle {\n            constructor(x, y) {\n                this.x = x;\n                this.y = y;\n                this.size = Math.random() * 5 + 2;\n                this.speedX = Math.random() * 3 - 1.5;\n                this.opacity = 1; // Initial opacity between 0.5 and 1\n\n                this.update = () => {\n                    this.x += this.speedX;\n                    this.y -= 0.5;\n                    this.opacity -= 0.01; // Decrease opacity over time\n                };\n\n                this.draw = () => {\n                    console.log('Drawing particle', this.x, this.y, this.size, this.opacity);\n                    ctx.fillStyle = `rgba(255, 255, 255, ${this.opacity})`;\n                    ctx.beginPath();\n                    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n                    ctx.fill();\n                };\n            }\n        }\n\n        function animate() {\n            frameCount++; // Increment frameCount\n\n            if (frameCount % 10 === 0) {\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\n            }\n\n            particles.forEach((particle, index) => {\n                particle.update();\n                particle.draw();\n\n                if (particle.opacity <= 0) {\n                    particles.splice(index, 1);\n                }\n            });\n\n            requestAnimationFrame(animate);\n        }\n\n        const handleMouseMove = (e) => {\n            const { clientX, clientY } = e;\n            for (let i = 0; i < 20; i++) {\n                particles.push(new Particle(clientX, clientY));\n            }\n        };\n\n        canvas.addEventListener('mousemove', handleMouseMove);\n        animate();\n\n        return () => {\n            canvas.removeEventListener('mousemove', handleMouseMove);\n        };\n    }, []);\n\n    return <canvas ref={canvasRef} />;\n};\n\nexport default ParticleCanvas;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,SAAS,GAAGN,MAAM,CAAC,IAAI,CAAC;EAE9BC,SAAS,CAAC,MAAM;IACZ,MAAMM,MAAM,GAAGD,SAAS,CAACE,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IACnCH,MAAM,CAACI,KAAK,GAAGC,MAAM,CAACC,UAAU;IAChCN,MAAM,CAACO,MAAM,GAAGF,MAAM,CAACG,WAAW;IAElC,MAAMC,SAAS,GAAG,EAAE;IACpB,IAAIC,UAAU,GAAG,CAAC,CAAC,CAAC;;IAEpB,MAAMC,QAAQ,CAAC;MACXC,WAAWA,CAACC,CAAC,EAAEC,CAAC,EAAE;QACd,IAAI,CAACD,CAAC,GAAGA,CAAC;QACV,IAAI,CAACC,CAAC,GAAGA,CAAC;QACV,IAAI,CAACC,IAAI,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;QACjC,IAAI,CAACC,MAAM,GAAGF,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG;QACrC,IAAI,CAACE,OAAO,GAAG,CAAC,CAAC,CAAC;;QAElB,IAAI,CAACC,MAAM,GAAG,MAAM;UAChB,IAAI,CAACP,CAAC,IAAI,IAAI,CAACK,MAAM;UACrB,IAAI,CAACJ,CAAC,IAAI,GAAG;UACb,IAAI,CAACK,OAAO,IAAI,IAAI,CAAC,CAAC;QAC1B,CAAC;;QAED,IAAI,CAACE,IAAI,GAAG,MAAM;UACdC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAACV,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAACC,IAAI,EAAE,IAAI,CAACI,OAAO,CAAC;UACxEjB,GAAG,CAACsB,SAAS,GAAI,uBAAsB,IAAI,CAACL,OAAQ,GAAE;UACtDjB,GAAG,CAACuB,SAAS,CAAC,CAAC;UACfvB,GAAG,CAACwB,GAAG,CAAC,IAAI,CAACb,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAACC,IAAI,EAAE,CAAC,EAAEC,IAAI,CAACW,EAAE,GAAG,CAAC,CAAC;UAClDzB,GAAG,CAAC0B,IAAI,CAAC,CAAC;QACd,CAAC;MACL;IACJ;IAEA,SAASC,OAAOA,CAAA,EAAG;MACfnB,UAAU,EAAE,CAAC,CAAC;;MAEd,IAAIA,UAAU,GAAG,EAAE,KAAK,CAAC,EAAE;QACvBR,GAAG,CAAC4B,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE9B,MAAM,CAACI,KAAK,EAAEJ,MAAM,CAACO,MAAM,CAAC;MACpD;MAEAE,SAAS,CAACsB,OAAO,CAAC,CAACC,QAAQ,EAAEC,KAAK,KAAK;QACnCD,QAAQ,CAACZ,MAAM,CAAC,CAAC;QACjBY,QAAQ,CAACX,IAAI,CAAC,CAAC;QAEf,IAAIW,QAAQ,CAACb,OAAO,IAAI,CAAC,EAAE;UACvBV,SAAS,CAACyB,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;QAC9B;MACJ,CAAC,CAAC;MAEFE,qBAAqB,CAACN,OAAO,CAAC;IAClC;IAEA,MAAMO,eAAe,GAAIC,CAAC,IAAK;MAC3B,MAAM;QAAEC,OAAO;QAAEC;MAAQ,CAAC,GAAGF,CAAC;MAC9B,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;QACzB/B,SAAS,CAACgC,IAAI,CAAC,IAAI9B,QAAQ,CAAC2B,OAAO,EAAEC,OAAO,CAAC,CAAC;MAClD;IACJ,CAAC;IAEDvC,MAAM,CAAC0C,gBAAgB,CAAC,WAAW,EAAEN,eAAe,CAAC;IACrDP,OAAO,CAAC,CAAC;IAET,OAAO,MAAM;MACT7B,MAAM,CAAC2C,mBAAmB,CAAC,WAAW,EAAEP,eAAe,CAAC;IAC5D,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOxC,OAAA;IAAQgD,GAAG,EAAE7C;EAAU;IAAA8C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrC,CAAC;AAAClD,EAAA,CAvEID,cAAc;AAAAoD,EAAA,GAAdpD,cAAc;AAyEpB,eAAeA,cAAc;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}