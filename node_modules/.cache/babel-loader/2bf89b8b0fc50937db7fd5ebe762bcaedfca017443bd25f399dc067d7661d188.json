{"ast":null,"code":"var _jsxFileName = \"/home/chernandez148/personal_projects/protfolio_v4/client/src/components/ParticleCanvas/ParticleCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParticleCanvas = () => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    updateCanvasDimensions(canvas, ctx); // Update canvas dimensions initially\n\n    const particles = [];\n\n    // ... Rest of your Particle class and other code ...\n\n    function updateCanvasDimensions(canvas, ctx) {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight * 0.5; // Set canvas height to 50% of screen height\n\n      // Redraw particles with updated canvas dimensions\n      particles.forEach(particle => {\n        particle.update();\n        particle.draw();\n      });\n    }\n    function handleResize() {\n      updateCanvasDimensions(canvas, ctx);\n    }\n    window.addEventListener('resize', handleResize);\n    function animate() {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      particles.forEach(particle => {\n        particle.update();\n        particle.draw();\n      });\n      requestAnimationFrame(animate);\n    }\n    createParticles();\n    animate();\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 12\n  }, this);\n};\n_s(ParticleCanvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = ParticleCanvas;\nexport default ParticleCanvas;\nvar _c;\n$RefreshReg$(_c, \"ParticleCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","ParticleCanvas","_s","canvasRef","canvas","current","ctx","getContext","updateCanvasDimensions","particles","width","window","innerWidth","height","innerHeight","forEach","particle","update","draw","handleResize","addEventListener","animate","clearRect","requestAnimationFrame","createParticles","removeEventListener","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/chernandez148/personal_projects/protfolio_v4/client/src/components/ParticleCanvas/ParticleCanvas.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\n\nconst ParticleCanvas = () => {\n    const canvasRef = useRef(null);\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        updateCanvasDimensions(canvas, ctx); // Update canvas dimensions initially\n\n        const particles = [];\n\n        // ... Rest of your Particle class and other code ...\n\n        function updateCanvasDimensions(canvas, ctx) {\n            canvas.width = window.innerWidth;\n            canvas.height = window.innerHeight * 0.5; // Set canvas height to 50% of screen height\n\n            // Redraw particles with updated canvas dimensions\n            particles.forEach((particle) => {\n                particle.update();\n                particle.draw();\n            });\n        }\n\n        function handleResize() {\n            updateCanvasDimensions(canvas, ctx);\n        }\n\n        window.addEventListener('resize', handleResize);\n\n        function animate() {\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n            particles.forEach((particle) => {\n                particle.update();\n                particle.draw();\n            });\n\n            requestAnimationFrame(animate);\n        }\n\n        createParticles();\n        animate();\n\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }, []);\n\n    return <canvas ref={canvasRef} />;\n};\n\nexport default ParticleCanvas;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,SAAS,GAAGN,MAAM,CAAC,IAAI,CAAC;EAE9BC,SAAS,CAAC,MAAM;IACZ,MAAMM,MAAM,GAAGD,SAAS,CAACE,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IACnCC,sBAAsB,CAACJ,MAAM,EAAEE,GAAG,CAAC,CAAC,CAAC;;IAErC,MAAMG,SAAS,GAAG,EAAE;;IAEpB;;IAEA,SAASD,sBAAsBA,CAACJ,MAAM,EAAEE,GAAG,EAAE;MACzCF,MAAM,CAACM,KAAK,GAAGC,MAAM,CAACC,UAAU;MAChCR,MAAM,CAACS,MAAM,GAAGF,MAAM,CAACG,WAAW,GAAG,GAAG,CAAC,CAAC;;MAE1C;MACAL,SAAS,CAACM,OAAO,CAAEC,QAAQ,IAAK;QAC5BA,QAAQ,CAACC,MAAM,CAAC,CAAC;QACjBD,QAAQ,CAACE,IAAI,CAAC,CAAC;MACnB,CAAC,CAAC;IACN;IAEA,SAASC,YAAYA,CAAA,EAAG;MACpBX,sBAAsB,CAACJ,MAAM,EAAEE,GAAG,CAAC;IACvC;IAEAK,MAAM,CAACS,gBAAgB,CAAC,QAAQ,EAAED,YAAY,CAAC;IAE/C,SAASE,OAAOA,CAAA,EAAG;MACff,GAAG,CAACgB,SAAS,CAAC,CAAC,EAAE,CAAC,EAAElB,MAAM,CAACM,KAAK,EAAEN,MAAM,CAACS,MAAM,CAAC;MAEhDJ,SAAS,CAACM,OAAO,CAAEC,QAAQ,IAAK;QAC5BA,QAAQ,CAACC,MAAM,CAAC,CAAC;QACjBD,QAAQ,CAACE,IAAI,CAAC,CAAC;MACnB,CAAC,CAAC;MAEFK,qBAAqB,CAACF,OAAO,CAAC;IAClC;IAEAG,eAAe,CAAC,CAAC;IACjBH,OAAO,CAAC,CAAC;IAET,OAAO,MAAM;MACTV,MAAM,CAACc,mBAAmB,CAAC,QAAQ,EAAEN,YAAY,CAAC;IACtD,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOnB,OAAA;IAAQ0B,GAAG,EAAEvB;EAAU;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrC,CAAC;AAAC5B,EAAA,CAjDID,cAAc;AAAA8B,EAAA,GAAd9B,cAAc;AAmDpB,eAAeA,cAAc;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}